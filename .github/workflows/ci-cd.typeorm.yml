name: NestJS CI/CD (Alternative)

on:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create environment file
        run: |
          cp .env.example .env.docker
          echo "DATABASE_URL=postgresql://postgres:postgres@postgres:5432/nestjs_db?schema=public" >> .env.docker

      - name: Build Docker images
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml build

      - name: Start services
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d

      - name: Show service logs
        run: docker compose logs

      - name: Wait for database to be ready
        run: |
          timeout 60 bash -c 'until docker compose exec -T postgres pg_isready -U postgres; do echo "Waiting for postgres..."; sleep 2; done'
        timeout-minutes: 2

      - name: Run database migrations
        run: docker compose exec -T app npx prisma migrate deploy

      - name: Run unit tests
        run: docker compose exec -T app npm test

      - name: Run e2e tests
        run: docker compose exec -T app npm run test:e2e

      - name: Show logs on failure
        if: failure()
        run: docker compose logs

      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml down -v
